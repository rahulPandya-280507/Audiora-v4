* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    /*tells the browser that the box is of width 200px and not 220px when 20px padding is added*/
}

body {
    font-family: Arial, Helvetica, sans-serif;
    background: #f5f5f5;
    color: #222;
    display: flex;
    /*creates a flex container - it keeps all of its children in an arranged format*/
    flex-direction: column;
    /*this keeps the header (nav+logo), main(content+body), and footer(miniplayer) in a straight column*/
    min-height: 100vh;
}

header {
    background: #111;
    color: white;
    padding: 1rem 2rem;
    /*vertical horizontal, 1rem = 16px, useful for scalability*/
    display: flex;
    justify-content: space-between;
    align-items: center;
}

header .logo {
    font-size: 1.5rem;
    /*1.5rem = 1.5*16px = 24px*/
    font-weight: bold;
}

header nav a {
    color: white;
    margin-left: 1rem;
    text-decoration: none;
}

main {
    flex: 1;
    /*shorthand for flex-grow: 1; flex-shrink: 1; flex-basis: 0;. basically, take up all the space in the flex container*/
    padding: 2rem;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    /*repeat(auto-fill, …) → fill the row with as many columns as will fit.
minmax(180px, 1fr) → each card should be at least 180px wide, but can grow to share remaining space.*/
    gap: 1.5rem;
}

.book-card {
    background: white;
    border-radius: 10px;
    padding: 1rem;
    text-align: center;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s;
}

.book-card:hover {
    transform: translateY(-5px);
}

.book-card img {
    width: 100%;
    border-radius: 8px;
}

footer {
    background: #111;
    color: white;
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    /*this adds space between the items. This aligns items along the main axis (row for flexbox).*/
    align-items: center;
}

.player-controls button {
    background: none;
    border: none;
    color: white;
    font-size: 1.2rem;
    margin: 0 0.5rem;
    cursor: pointer; /*this means that when the user is hovering over the buttons, the cursor will change to a pointer*/
}